<?php
/**
 * Hyvä Themes - https://hyva.io
 * Copyright © Hyvä Themes 2020-present. All rights reserved.
 * This product is licensed per Magento install
 * See https://hyva.io/license
 */

declare(strict_types=1);

use Magento\Framework\Escaper;
use Magento\Search\Helper\Data as SearchHelper;

/**
 * Template for quick search mini form.
 * Overridden to manage template injection for the rendering of autocomplete results.
 *
 * @var \Smile\ElasticsuiteCore\Block\Search\Form\Autocomplete $block
 * @var SearchHelper $helper
 * @var Escaper $escaper
 * @var \Hyva\Theme\Model\ViewModelRegistry $viewModels
 * @var \Hyva\Theme\ViewModel\HeroiconsOutline $heroicons
 */

$helper        = $this->helper(SearchHelper::class);
$suggestionUrl = $helper->getResultUrl() . '?' . $helper->getQueryParamName() . '=';
$heroicons     = $viewModels->require(\Hyva\Theme\ViewModel\HeroiconsOutline::class);
$templates     = json_decode($block->getJsonSuggestRenderers(), true);

/**
 * Hello Retail PartnerSearch RestAPI implementation
 * Introducing the API endpoint and search configuration key for instant search model
 * which can be found in both the docs and the Hello Retail backend.
 *
 * @var String $endPoint
 * @var String $key
 * @var String $version (optional)
 * @var String $format
 *
 * @see https://developer.helloretail.com/sdk/search/
 * @TODO Implement variables in Magento Admin Configuration
 */

$endPoint = "https://core.helloretail.com/serve/search";
$key = "db7b9a58-1ba1-478d-9f67-f59fa1270811";
$version = "18171";
$format = "html"
?>

<script>
    function initMiniSearchComponent() {
        "use strict";

        return {
            show:false,
            formSelector: "#search_mini_form",
            url: "<?= /* @escapeNotVerified */ $endPoint ?>",
            destinationSelector: "#search_autocomplete",
            templates: <?= /* @noEscape */ $block->getJsonSuggestRenderers() ?>,
            priceFormat: <?= /* @noEscape */ $block->getJsonPriceFormat() ?>,
            minSearchLength: <?= /* @escapeNotVerified */ $helper->getMinQueryLength() ?>,
            searchResultsByType: {},
            currentRequest: null,
            htmlOutput: null,

            /**
             * Get search results.
             */
            getSearchResults: function () {
                let value = document.querySelector('#search').value.trim();

                if (value.length < parseInt(this.minSearchLength, 10)) {
                    this.searchResultsByType = [];

                    return false;
                }

                let url = this.url;

                if (this.currentRequest !== null) {
                    this.currentRequest.abort();
                }
                this.currentRequest = new AbortController();

                fetch(url, {
                    method: 'POST',
                    signal: this.currentRequest.signal,
                    headers: {
                        'Content-Type': 'application/json',
                        'Referer': 'https://www.misterbricks.nl',
                    },
                    body: JSON.stringify({
                        "query": value,
                        "key": "<?= /* @escapeNotVerified */ $key ?>",
                        "id": <?= /* @escapeNotVerified */ $version  ?>,
                        "products": {
                            "returnFilter": true,
                            "start": 0,
                            "count": 12
                            //"fields": ["title", "isOnSale", "oldPrice", "price", "url", "imgUrl"]
                        },
                        "categories": {
                            "start": 0,
                            "count": 4,
                        },
                        "format": "<?= /* @escapeNotVerified */ $format; ?>"
                    }),
                }).then((response) => {
                    if (response.ok) {
                        return response.json();
                    }
                }).then((data)  => {
                    this.show = data.success;
                    this.htmlOutput = data.html;

                }).catch((error) => {
                    console.log(error);
                    });
                },
        }
    }
</script>
<div id="elasticsuite-search-container" x-show="true">
    <div class="container py-2 mx-auto text-black" x-data="initMiniSearchComponent()" @click.away="show = false">
        <form class="form minisearch" id="search_mini_form" action="<?= $escaper->escapeUrl($helper->getResultUrl()) ?>" method="get" role="search">
            <div class="relative flex nowrap">
                <label class="sr-only" for="search">
                    <?= $escaper->escapeHtmlAttr(__('Search entire store here...')) ?>
                </label>
                <input id="search"
                       x-on:input.debounce="getSearchResults()"
                       x-ref="searchInput"
                       type="search"
                       class="w-full p-2 rounded-l-md leading-normal transition appearance-none text-grey-900
                        focus:outline-none focus:border-transparent border-white"
                       autocapitalize="off" autocomplete="off" autocorrect="off"
                       name="<?= $escaper->escapeHtmlAttr($helper->getQueryParamName()) ?>"
                       value="<?= $escaper->escapeHtmlAttr($helper->getEscapedQueryText()) ?>"
                       placeholder="<?= $escaper->escapeHtmlAttr(__('Search entire store here...')) ?>"
                       maxlength="<?= $escaper->escapeHtmlAttr($helper->getMaxQueryLength()) ?>"
                       @search-open.window.debounce.10="
                            $el.focus();
                            $el.select();
                       "
                />
                <button type="submit" title="Search" class="action search btn justify-center rounded-l-none rounded-r-md px-3 text-base shadow-none disabled:shadow-none transition
                    bg-white hover:bg-white active:bg-white text-gray-600 border border-transparent hover:text-lego-blue-light active:text-lego-blue-light disabled:bg-white disabled:opacity-70" aria-label="Search">
                    <?= $heroicons->searchHtml('', 24, 24, ["aria-hidden" => "true"]) ?>
                </button>
            </div>
            <template x-teleport=".columns">
                <div id="search_autocomplete" class="search-autocomplete w-full absolute" x-show="show">
                    <div x-html="htmlOutput" class="absolute bg-white border border-solid border-slate-100 z-50 w-full shadow-lg md:-mt-4">
                        <?= $escaper->escapeHtml(__('No results found')) ?>
                    </div>
                </div>
            </template>

            <?= $block->getChildHtml() ?>
        </form>
    </div>
</div>
