<?php
/**
 * BSS Commerce Co.
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the EULA
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://bsscommerce.com/Bss-Commerce-License.txt
 *
 * @category   BSS
 * @package    Hyva_BssPreOrder
 * @author     Extension Team
 * @copyright  Copyright (c) 2022 BSS Commerce Co. ( http://bsscommerce.com )
 * @license    http://bsscommerce.com/Bss-Commerce-License.txt
 */

declare(strict_types=1);

use Hyva\Theme\Model\ViewModelRegistry;
use Hyva\Theme\ViewModel\HeroiconsOutline;
use Hyva\Theme\ViewModel\HeroiconsSolid;
use Hyva\Theme\ViewModel\ProductCompare;
use Hyva\Theme\ViewModel\ProductListItem;
use Hyva\Theme\ViewModel\ProductPage;
use Hyva\Theme\ViewModel\Wishlist;
use Magento\Catalog\Block\Product\AbstractProduct;
use Magento\Catalog\Helper\Output as CatalogOutputHelper;
use Magento\Framework\Escaper;
use Bss\PreOrder\Helper\Data as BssPreOder;
use Hyva\BssPreOrder\ViewModels\Helper as ModuleViewModel;
use Bss\HyvaCompatBase\ViewModel\Base;

// phpcs:disable Magento2.Templates.ThisInTemplate.FoundHelper
// phpcs:disable Generic.Files.LineLength.TooLong

/** @var AbstractProduct $block */
/** @var Escaper $escaper */
/** @var ViewModelRegistry $viewModels */

/** @var ProductPage $productViewModel */
$productViewModel = $viewModels->require(ProductPage::class);

/** @var ProductListItem $productListItemViewModel */
$productListItemViewModel = $viewModels->require(ProductListItem::class);

/** @var CatalogOutputHelper $catalogOutputHelper */
$catalogOutputHelper = $this->helper(CatalogOutputHelper::class);

/** @var ProductCompare $compareViewModel */
$compareViewModel = $viewModels->require(ProductCompare::class);
/** @var Wishlist $wishlistViewModel */
$wishlistViewModel = $viewModels->require(Wishlist::class);

/** @var HeroiconsOutline $heroiconsOutline */
$heroiconsOutline = $viewModels->require(HeroiconsOutline::class);
/** @var HeroiconsSolid $heroiconsSolid */
$heroiconsSolid = $viewModels->require(HeroiconsSolid::class);

/** @var HeroiconsOutline $heroicons */
$heroicons = $viewModels->require(HeroiconsOutline::class);

/** @var Magento\Catalog\Model\Product $product */
/**  @var BssPreOder $preOrderHelper */
$product = $block->getData('product');
$imageDisplayArea = $block->getData('image_display_area');
$templateType = $block->getData('template_type');
$viewMode = $block->getData('view_mode');
$showDescription = $block->getData('show_description');
$showAddToWishlist = $wishlistViewModel->isEnabled();
$showAddToCompare = $compareViewModel->showInProductList();
$viewIsGrid = $viewMode === 'grid';
if (!$product) {
    return '';
}
$productId = $product->getId();
$uniqueId = '_' . uniqid();
$moduleViewModel = $viewModels->require(ModuleViewModel::class);
$preOrderHelper = $moduleViewModel->getHelper();
$hideDetails = $block->getData('hide_details') ?: false;
$hideRatingSummary = $block->getData('hide_rating_summary') ?: false;

$imageCustomAttributes = $product->getData('image_custom_attributes')
    ?? $block->getData('image_custom_attributes')
    ?? [];

$baseViewModel = $viewModels->require(Base::class);
?>

<?php if ($product->isSaleable()): ?>
<form method="post"
      action="<?= $escaper->escapeUrl($productViewModel->getAddToCartUrl($product)) ?>"
      class="item product product-item product_addtocart_form card card-interactive flex flex-col w-full <?= $viewIsGrid ? '' : 'md:flex-row' ?>"
    <?php if ($product->getOptions()): ?>
        enctype="multipart/form-data"
    <?php endif; ?>
    x-data="getConfigInCategory()" @configurable-selection-changed<?= $product->getId() ?>.window="showInput = checkIsMix($event.detail.productIndex)"
>
    <?= /** @noEscape */
    $block->getBlockHtml('formkey') ?>
    <template x-if="showInput">
        <input type="hidden" name="is_preorder" value="1">
    </template>
    <input type="hidden" name="product" value="<?= (int)$productId ?>"/>
    <?php else: ?>
    <div class="item product product-item card card-interactive flex flex-col w-full <?= $viewIsGrid ? '' : 'md:flex-row' ?>">
        <?php endif; ?>
        <?php /* Product Image */ ?>
        <a href="<?= $escaper->escapeUrl($product->getProductUrl()) ?>"
           class="product photo product-item-photo block mx-auto mb-3 <?= $viewIsGrid ? '' : 'md:w-2/6 md:mb-0 md:mr-5' ?>"
           tabindex="-1"
        >
            <?= $block->getImage($product, $imageDisplayArea)
                ->setTemplate('Magento_Catalog::product/list/image.phtml')
                ->setData('custom_attributes', $imageCustomAttributes)
                ->setProductId($productId)
                ->toHtml(); ?>
        </a>
        <div class="product-info flex flex-col flex-grow">
            <?php $productNameStripped = $block->stripTags($product->getName(), null, true); ?>

            <div class="mt-2 mb-1 items-center justify-center text-primary font-semibold text-lg text-center <?= $viewIsGrid ? '' : 'md:text-left' ?>">
                <a class="product-item-link"
                   href="<?= $escaper->escapeUrl($product->getProductUrl()) ?>">
                    <?= /* @noEscape */
                    $catalogOutputHelper->productAttribute($product, $product->getName(), 'name') ?>
                </a>
            </div>

            <?php if (!$hideRatingSummary): ?>
                <div class="py-1 mx-auto <?= $viewIsGrid ? '' : 'md:mx-0 md:w-auto' ?>">
                    <?= $block->getReviewsSummaryHtml($product, 'short') ?>
                </div>
            <?php endif; ?>

            <?= $block->getChildHtml('product.info.details.before') ?>
            <?php if ($product->isAvailable() && !$hideDetails): ?>
                <?= $block->getProductDetailsHtml($product) ?>
            <?php endif; ?>
            <?= $block->getChildHtml('product.info.details.after') ?>

            <?php if ($showDescription): ?>
                <div class="short-desc mt-2 mb-1 items-center justify-center text-primary text-center <?= $viewIsGrid ? '' : 'md:text-left' ?>">
                    <?= /* @noEscape */
                    $productViewModel->getShortDescriptionForProduct($product) ?>
                </div>
            <?php endif; ?>

            <script>
                function initPriceBox_<?= /** @noEscape */ $uniqueId ?>() {
                    return {
                        updatePrice(priceData) {
                            const regularPriceLabel = this.$el.querySelector('.normal-price .price-label');
                            const regularPriceElement = this.$el.querySelector('.normal-price .price-wrapper .price');
                            if (priceData.finalPrice.amount < priceData.oldPrice.amount) {
                                regularPriceLabel.classList.add('hidden');
                            } else {
                                regularPriceLabel.classList.remove('hidden');
                            }
                            regularPriceElement.innerText = hyva.formatPrice(priceData.finalPrice.amount);
                        }
                    }
                }
            </script>

            <?= $block->getChildHtml('product.info.prices.before') ?>
            <div class="product-price-details pt-1 text-gray-900"
                 x-data="initPriceBox_<?= /** @noEscape */
                 $uniqueId ?>()"
                 @update-prices-<?= (int)$productId ?>.window="updatePrice($event.detail);"
            >
                <?= /* @noEscape */
                $productListItemViewModel->getProductPriceHtml($product) ?>
            </div>
            <?= $block->getChildHtml('product.info.prices.after') ?>
            <?php if ($preOrderHelper->isEnable()) : ?>
                <?php if ($product->getTypeId() === 'grouped'): ?>
                    <?php
                        $isPreOder = $moduleViewModel->getIsPreOrder($product);
                    ?>
                    <span class="mess-preorder <?= $isPreOder ? '' : 'hidden' ?>"><?= $preOrderHelper->getMess(); ?></span>
                <input type="hidden" name="is_preorder_group_<?= $productId ?>" value="1">
                <?php else : ?>
                    <script>
                        <?php
                        $message = $preOrderHelper->getMess();
                        $button = $preOrderHelper->getButton();
                        ?>
                        function preOderSimple() {
                            return {
                                <?php if ($block->getProduct()->getExtensionAttributes()->getStockItem()) : ?>
                                stock_status: "<?= (int)$block->getProduct()->getExtensionAttributes()->getStockItem()->getIsInStock(); ?>",
                                <?php endif; ?>
                                buttonText: "<?= $button; ?>",
                                init() {
                                    let buttonATC = this.$el.parentNode.parentNode.querySelector('.action.tocart');
                                    if (buttonATC) {
                                        buttonATC.textContent = this.buttonText;
                                    }
                                }
                            }
                        }
                    </script>
                    <div x-data="preOderSimple()" class="bss-pre-order">
                        <span class="mess-preorder-<?= $productId ?>"></span>
                    </div>
                <?php endif; ?>
            <?php endif; ?>

            <?= $block->getChildHtml('product.info.actions.before') ?>

            <div class="mt-auto pt-3 flex flex-wrap justify-center items-center">
                <?php if ($product->isSaleable()): ?>
                    <?php
                        if ($product->getTypeId() === 'configurable') {
                            $simpleIndex = $moduleViewModel->getSimpleIndexConfigurable($product);
                    ?>
                        <script>
                            function productATC_<?=$product->getId()?>() {
                                return {
                                    childProductsId: <?= $baseViewModel->serialize($simpleIndex) ?>,
                                    productChildPreOder: <?= $baseViewModel->serialize($simpleIndex) ?>,
                                    show: false,
                                    preOder(superAtt, productIndex, addtoCartButton) {
                                        let mess = document.querySelector('.mess-preorder-<?=$product->getId()?>');
                                        if (superAtt.length >= 1 && Object.keys(this.productChildPreOder).includes(productIndex)) {
                                            addtoCartButton.textContent = this.productChildPreOder[productIndex]['button'];
                                            this.show = true;
                                            mess.textContent = this.productChildPreOder[productIndex]['mess'];
                                            mess.classList.remove("hidden");
                                        } else {
                                            this.show = false;
                                            mess.classList.add("hidden");
                                        }
                                    }
                                }
                            }
                        </script>
                        <button x-data="productATC_<?= $product->getId() ?>()"
                                @configurable-selection-changed<?= $product->getId() ?>.window="preOder(Object.keys($event.detail.selectedValues),$event.detail.productIndex,$refs.addtoCart_<?= $product->getId() ?>)"
                                class="w-auto btn btn-primary justify-center text-sm
                                <?= $viewIsGrid ? 'mr-auto' : 'mr-auto md:mr-0' ?>"
                                aria-label="<?= $escaper->escapeHtmlAttr(__('Add to Cart')) ?>"
                        >
                            <?= $heroiconsOutline->shoppingCartHtml("h-6 w-6 border-current inline", 25, 25) ?>
                            <span x-show="!show"
                                  class="ml-2 inline add-to-cart-text <?= $viewIsGrid ? 'md:ml-0 md:hidden lg:ml-2 lg:inline' : '' ?>">
                                  <?= $escaper->escapeHtml(__('Add to Cart')) ?>
                            </span>
                            <span x-show="show" x-ref="addtoCart_<?= $product->getId() ?>"
                                  class="ml-2 inline <?= $viewIsGrid ? 'md:ml-0 md:hidden lg:ml-2 lg:inline' : '' ?>">
                                  <?= $escaper->escapeHtml(__('Add to Cart')) ?>
                            </span>
                        </button>
                    <?php } else { ?>
                    <?php
                    if ($product->getTypeId() === 'simple' || $product->getTypeId() === 'grouped'){
                        $isPreOder = $moduleViewModel->getIsPreOrder($product);
                    ?>
                        <button class="w-auto btn btn-primary justify-center text-sm
                            <?= $viewIsGrid ? 'mr-auto' : 'mr-auto md:mr-0' ?>"
                            aria-label="<?= $escaper->escapeHtmlAttr(__('Add to Cart')) ?>"
                        >
                            <?= $heroiconsOutline->shoppingCartHtml("h-6 w-6 border-current inline", 25, 25) ?>
                            <?php if ($isPreOder) : ?>
                                <span class="ml-2 inline add-to-cart-text <?= $viewIsGrid ? 'md:ml-0 md:hidden lg:ml-2 lg:inline' : '' ?>">
                                    <?= $escaper->escapeHtml($preOrderHelper->getButton()) ?>
                                </span>
                            <?php else: ?>
                                <span class="ml-2 inline add-to-cart-text <?= $viewIsGrid ? 'md:ml-0 md:hidden lg:ml-2 lg:inline' : '' ?>">
                                    <?= $escaper->escapeHtml(__('Add to Cart')) ?>
                                </span>
                            <?php endif; ?>
                        </button>
                    <?php } else { ?>
                        <button class="w-auto btn btn-primary justify-center text-sm
                                <?= $viewIsGrid ? 'mr-auto' : 'mr-auto md:mr-0' ?>"
                                aria-label="<?= $escaper->escapeHtmlAttr(__('Add to Cart')) ?>"
                        >
                            <?= $heroiconsOutline->shoppingCartHtml("h-6 w-6 border-current inline", 25, 25) ?>
                            <span class="ml-2 inline <?= $viewIsGrid ? 'md:ml-0 md:hidden lg:ml-2 lg:inline' : '' ?>">
                                <?= $escaper->escapeHtml(__('Add to Cart')) ?>
                            </span>
                        </button>
                    <?php } ?>
                    <?php } ?>
                <?php endif; ?>
                <?php if ($showAddToWishlist): ?>
                    <button x-data="initWishlist()"
                            @click.prevent="addToWishlist(<?= (int)$productId ?>)"
                            aria-label="<?= $escaper->escapeHtmlAttr(__('Add to Wish List')) ?>"
                            type="button"
                            class="rounded-full w-9 h-9 bg-gray-200 p-0 border-0 inline-flex shrink-0 items-center justify-center text-gray-500 hover:text-red-600 ml-2">
                        <?= $heroiconsSolid->heartHtml("w-5 h-5", 25, 25) ?>
                    </button>
                <?php endif; ?>
                <?php if ($showAddToCompare): ?>
                    <button x-data="initCompareOnProductList()"
                            @click.prevent="addToCompare(<?= (int)$productId ?>)"
                            aria-label="<?= $escaper->escapeHtmlAttr(__('Add to Compare')) ?>"
                            type="button"
                            class="rounded-full w-9 h-9 bg-gray-200 p-0 border-0 inline-flex shrink-0 items-center justify-center text-gray-500 hover:text-yellow-500 ml-2">
                        <?= $heroicons->scaleHtml("w-5 h-5", 25, 25) ?>
                    </button>
                <?php endif; ?>
                <?php if ($addToBlock = $block->getChildBlock('addto')): ?>
                    <?= $addToBlock->setProduct($product)->getChildHtml() ?>
                <?php endif; ?>
            </div>
            <?= $block->getChildHtml('product.info.actions.after') ?>
        </div>
        <?php if ($product->isSaleable()): ?>
</form>
<?php else: ?>
    </div>
<?php endif; ?>
<script>
    function getConfigInCategory() {
        return {
            allProductChild: <?php echo $moduleViewModel->getAllProductChild(); ?>,
            isMix: <?php echo $moduleViewModel->getIsMix() ? 'true' : 'false' ?> ,
            showInput: false,
            checkIsMix(productId) {
                for(let childProduct of this.allProductChild)
                {
                    for (const [key, val] of Object.entries(childProduct.child)) {
                        if(val.productId === productId && val.stock_status === false && this.isMix === false) {
                            return true;
                        }
                    }
                }
            }
        }
    }
</script>
