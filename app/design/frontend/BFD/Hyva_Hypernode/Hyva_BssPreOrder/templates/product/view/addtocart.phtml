<?php
/**
 * BSS Commerce Co.
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the EULA
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://bsscommerce.com/Bss-Commerce-License.txt
 *
 * @category   BSS
 * @package    Hyva_BssPreOrder
 * @author     Extension Team
 * @copyright  Copyright (c) 2022 BSS Commerce Co. ( http://bsscommerce.com )
 * @license    http://bsscommerce.com/Bss-Commerce-License.txt
 */

declare(strict_types=1);

use Hyva\Theme\Model\ViewModelRegistry;
use Hyva\Theme\ViewModel\HeroiconsOutline;
use Magento\Framework\Escaper;
use Magento\Framework\View\Element\Template;
use Hyva\BssPreOrder\ViewModels\Helper as ModuleViewModel;
use Bss\PreOrder\Helper\Data as BssPreOder;
use Bss\HyvaCompatBase\ViewModel\Base;
use Hyva\Theme\ViewModel\CurrentProduct;
use Magento\Catalog\Model\Product;


/** @var Template $block */
/** @var Escaper $escaper */
/** @var ViewModelRegistry $viewModels */
/**  @var BssPreOder $preOrderHelper */

/** @var HeroiconsOutline $heroicons */
/** @var CurrentProduct $currentProduct */
$currentProduct = $viewModels->require(CurrentProduct::class);
/** @var Product $product */
$product = $currentProduct->get();
$heroicons = $viewModels->require(HeroiconsOutline::class);
$moduleViewModel = $viewModels->require(ModuleViewModel::class);
$baseViewModel = $viewModels->require(Base::class);
$preOrderHelper = $moduleViewModel->getHelper();
?>
<?php
    if($product->getTypeId() === 'configurable'){
        $simpleIndex = $moduleViewModel->getSimpleIndexConfigurable($product);
?>
<script>
    function productATC_<?=$product->getId()?>() {
        return {
            childProductsId : <?= $baseViewModel->serialize($simpleIndex) ?>,
            productChildPreOder : <?= $baseViewModel->serialize($simpleIndex) ?>,
            open: false,
            preOder(superAtt,productIndex,addtoCartButton){
                let optionproduct = document.querySelector('#product-options-wrapper');
                let availability = document.querySelector('.availability_message');
                let messpreoder = optionproduct.querySelector('.preoder-mess')
                if(superAtt.length >= 1 && Object.keys(this.productChildPreOder).includes(productIndex)){
                    addtoCartButton.textContent = this.productChildPreOder[productIndex]['button'];
                    availability.textContent = this.productChildPreOder[productIndex]['availability'];
                    this.open = true;
                    messpreoder.textContent = this.productChildPreOder[productIndex]['mess'];
                    messpreoder.classList.remove('hidden');
                } else {
                    this.open = false;
                    availability.textContent= "";
                    messpreoder.classList.add('hidden');
                }
            },
            init(){
                const mess = document.createElement("span");
                mess.classList.add('preoder-mess');
                mess.classList.add('hidden');
                let option = document.querySelector('#product-options-wrapper');
                let fieldset = option.querySelector('.fieldset');
                fieldset.appendChild(mess);
            }
        }
    }
</script>
<button x-data="productATC_<?=$product->getId()?>()" @configurable-selection-changed.window="preOder(Object.keys($event.detail.selectedValues),$event.detail.productIndex,$refs.addtoCart_<?=$product->getId()?>)" type="submit"
        x-init="init()"
        form="product_addtocart_form"
        title="<?= $escaper->escapeHtmlAttr(__('Add to Cart')) ?>"
        class="btn btn-primary"
        id="product-addtocart-button"
>
    <?= $heroicons->shoppingCartHtml('border-current'); ?>
    <span x-show="!open" x-ref="addtoCart_<?=$product->getId()?>" class="sm:block md:hidden lg:block"><?= $block->getData('is_cart_configure') ?
            $escaper->escapeHtml(__('Update item')) :
            $escaper->escapeHtml(__('Add to Cart')) ?>
    </span>
    <span x-show="open" x-ref="addtoCart_<?=$product->getId()?>" class="sm:block md:hidden lg:block"><?= $block->getData('is_cart_configure') ?
            $escaper->escapeHtml(__('Update item')) :
            $escaper->escapeHtml(__('Add to Cart')) ?>
    </span>
</button>
<?php }
    else
    {
        if($product->getTypeId() === 'simple' || $product->getTypeId() === 'grouped'){
            $isPreOder = $moduleViewModel->getIsPreOrder($product);
            ?>
            <script>
                function preOrderProductPage() {
                    const mess = document.createElement("span");
                    mess.textContent = '<?= $preOrderHelper->getAvailabilityMessageByPid($product->getId()) ?>'
                    let option = document.querySelector('#product-options-wrapper');
                    let fieldset = option.querySelector('.fieldset');
                    fieldset.appendChild(mess);
                }
            </script>
            <button type="submit"
                    form="product_addtocart_form"
                    title="<?= $escaper->escapeHtmlAttr(__('Add to Cart')) ?>"
                    class="btn btn-primary rounded-4xl"
                    id="product-addtocart-button"
            >
            <span class="block m-auto title-font text-xl my-2"><?= $block->getData('is_cart_configure') ?
                $escaper->escapeHtml(__('Update item')) :
                $escaper->escapeHtml(__('Add to Cart')) ?>
            </span>
            </button>
        <?php } else{ ?>
            <button type="submit"
                    form="product_addtocart_form"
                    title="<?= $escaper->escapeHtmlAttr(__('Add to Cart')) ?>"
                    class="btn btn-primary"
                    id="product-addtocart-button"
            >
                <span class="block"><?= $block->getData('is_cart_configure') ?
                        $escaper->escapeHtml(__('Update item')) :
                        $escaper->escapeHtml(__('Add to Cart')) ?>
    </span>
            </button>
        <?php } ?>
    <?php } ?>
<?= $block->getChildHtml('', true) ?>
